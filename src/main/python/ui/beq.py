# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'beq.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1569, 1078)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widgetGridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.widgetGridLayout.setObjectName("widgetGridLayout")
        self.panes = QtWidgets.QHBoxLayout()
        self.panes.setSpacing(9)
        self.panes.setObjectName("panes")
        self.leftPane = QtWidgets.QGridLayout()
        self.leftPane.setObjectName("leftPane")
        self.octaveSmoothing = QtWidgets.QComboBox(self.centralwidget)
        self.octaveSmoothing.setObjectName("octaveSmoothing")
        self.octaveSmoothing.addItem("")
        self.octaveSmoothing.addItem("")
        self.octaveSmoothing.addItem("")
        self.octaveSmoothing.addItem("")
        self.octaveSmoothing.addItem("")
        self.octaveSmoothing.addItem("")
        self.octaveSmoothing.addItem("")
        self.octaveSmoothing.addItem("")
        self.leftPane.addWidget(self.octaveSmoothing, 0, 4, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.leftPane.addWidget(self.label, 0, 3, 1, 1)
        self.limitsButton = QtWidgets.QToolButton(self.centralwidget)
        self.limitsButton.setObjectName("limitsButton")
        self.leftPane.addWidget(self.limitsButton, 0, 8, 1, 1)
        self.showValuesButton = QtWidgets.QToolButton(self.centralwidget)
        self.showValuesButton.setObjectName("showValuesButton")
        self.leftPane.addWidget(self.showValuesButton, 0, 7, 1, 1)
        self.chartSplitter = QtWidgets.QSplitter(self.centralwidget)
        self.chartSplitter.setLineWidth(1)
        self.chartSplitter.setOrientation(QtCore.Qt.Vertical)
        self.chartSplitter.setObjectName("chartSplitter")
        self.mainChartContainer = QtWidgets.QFrame(self.chartSplitter)
        self.mainChartContainer.setObjectName("mainChartContainer")
        self.mainChartLayout = QtWidgets.QHBoxLayout(self.mainChartContainer)
        self.mainChartLayout.setObjectName("mainChartLayout")
        self.mainChartLeftTools = QtWidgets.QFrame(self.mainChartContainer)
        self.mainChartLeftTools.setLineWidth(0)
        self.mainChartLeftTools.setObjectName("mainChartLeftTools")
        self.mainChartLeftToolLayout = QtWidgets.QVBoxLayout(self.mainChartLeftTools)
        self.mainChartLeftToolLayout.setContentsMargins(0, 0, 0, 0)
        self.mainChartLeftToolLayout.setSpacing(0)
        self.mainChartLeftToolLayout.setObjectName("mainChartLeftToolLayout")
        self.mainChartLeftToolTopLayout = QtWidgets.QVBoxLayout()
        self.mainChartLeftToolTopLayout.setObjectName("mainChartLeftToolTopLayout")
        self.y1MaxPlus10Button = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1MaxPlus10Button.setObjectName("y1MaxPlus10Button")
        self.mainChartLeftToolTopLayout.addWidget(self.y1MaxPlus10Button)
        self.y1MaxPlus5Button = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1MaxPlus5Button.setObjectName("y1MaxPlus5Button")
        self.mainChartLeftToolTopLayout.addWidget(self.y1MaxPlus5Button)
        self.y1MaxMinus5Button = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1MaxMinus5Button.setObjectName("y1MaxMinus5Button")
        self.mainChartLeftToolTopLayout.addWidget(self.y1MaxMinus5Button)
        self.y1MaxMinus10Button = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1MaxMinus10Button.setObjectName("y1MaxMinus10Button")
        self.mainChartLeftToolTopLayout.addWidget(self.y1MaxMinus10Button)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.mainChartLeftToolTopLayout.addItem(spacerItem)
        self.mainChartLeftToolLayout.addLayout(self.mainChartLeftToolTopLayout)
        self.mainChartLeftToolMidLayout = QtWidgets.QVBoxLayout()
        self.mainChartLeftToolMidLayout.setObjectName("mainChartLeftToolMidLayout")
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.mainChartLeftToolMidLayout.addItem(spacerItem1)
        self.y1AutoOnButton = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1AutoOnButton.setCheckable(True)
        self.y1AutoOnButton.setObjectName("y1AutoOnButton")
        self.mainChartLeftToolMidLayout.addWidget(self.y1AutoOnButton)
        self.y1AutoOffButton = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1AutoOffButton.setCheckable(True)
        self.y1AutoOffButton.setObjectName("y1AutoOffButton")
        self.mainChartLeftToolMidLayout.addWidget(self.y1AutoOffButton)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.mainChartLeftToolMidLayout.addItem(spacerItem2)
        self.mainChartLeftToolLayout.addLayout(self.mainChartLeftToolMidLayout)
        self.mainChartLeftToolBottomLayout = QtWidgets.QVBoxLayout()
        self.mainChartLeftToolBottomLayout.setObjectName("mainChartLeftToolBottomLayout")
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.mainChartLeftToolBottomLayout.addItem(spacerItem3)
        self.y1MinPlus10Button = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1MinPlus10Button.setObjectName("y1MinPlus10Button")
        self.mainChartLeftToolBottomLayout.addWidget(self.y1MinPlus10Button)
        self.y1MinPlus5Button = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1MinPlus5Button.setObjectName("y1MinPlus5Button")
        self.mainChartLeftToolBottomLayout.addWidget(self.y1MinPlus5Button)
        self.y1MinMinus5Button = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1MinMinus5Button.setObjectName("y1MinMinus5Button")
        self.mainChartLeftToolBottomLayout.addWidget(self.y1MinMinus5Button)
        self.y1MinMinus10Button = QtWidgets.QToolButton(self.mainChartLeftTools)
        self.y1MinMinus10Button.setObjectName("y1MinMinus10Button")
        self.mainChartLeftToolBottomLayout.addWidget(self.y1MinMinus10Button)
        self.mainChartLeftToolLayout.addLayout(self.mainChartLeftToolBottomLayout)
        self.mainChartLayout.addWidget(self.mainChartLeftTools)
        self.mainChart = MplWidget(self.mainChartContainer)
        self.mainChart.setObjectName("mainChart")
        self.mainChartLayout.addWidget(self.mainChart)
        self.mainChartRightTools = QtWidgets.QFrame(self.mainChartContainer)
        self.mainChartRightTools.setLineWidth(0)
        self.mainChartRightTools.setObjectName("mainChartRightTools")
        self.mainChartRightToolLayout = QtWidgets.QVBoxLayout(self.mainChartRightTools)
        self.mainChartRightToolLayout.setContentsMargins(0, 0, 0, 0)
        self.mainChartRightToolLayout.setSpacing(0)
        self.mainChartRightToolLayout.setObjectName("mainChartRightToolLayout")
        self.mainChartRightToolTopLayout = QtWidgets.QVBoxLayout()
        self.mainChartRightToolTopLayout.setObjectName("mainChartRightToolTopLayout")
        self.y2MaxPlus10Button = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2MaxPlus10Button.setObjectName("y2MaxPlus10Button")
        self.mainChartRightToolTopLayout.addWidget(self.y2MaxPlus10Button)
        self.y2MaxPlus5Button = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2MaxPlus5Button.setObjectName("y2MaxPlus5Button")
        self.mainChartRightToolTopLayout.addWidget(self.y2MaxPlus5Button)
        self.y2MaxMinus5Button = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2MaxMinus5Button.setObjectName("y2MaxMinus5Button")
        self.mainChartRightToolTopLayout.addWidget(self.y2MaxMinus5Button)
        self.y2MaxMinus10Button = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2MaxMinus10Button.setObjectName("y2MaxMinus10Button")
        self.mainChartRightToolTopLayout.addWidget(self.y2MaxMinus10Button)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.mainChartRightToolTopLayout.addItem(spacerItem4)
        self.mainChartRightToolLayout.addLayout(self.mainChartRightToolTopLayout)
        self.mainChartRightToolMidLayout = QtWidgets.QVBoxLayout()
        self.mainChartRightToolMidLayout.setObjectName("mainChartRightToolMidLayout")
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.mainChartRightToolMidLayout.addItem(spacerItem5)
        self.y2AutoOnButton = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2AutoOnButton.setCheckable(True)
        self.y2AutoOnButton.setObjectName("y2AutoOnButton")
        self.mainChartRightToolMidLayout.addWidget(self.y2AutoOnButton)
        self.y2AutoOffButton = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2AutoOffButton.setCheckable(True)
        self.y2AutoOffButton.setObjectName("y2AutoOffButton")
        self.mainChartRightToolMidLayout.addWidget(self.y2AutoOffButton)
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.mainChartRightToolMidLayout.addItem(spacerItem6)
        self.mainChartRightToolLayout.addLayout(self.mainChartRightToolMidLayout)
        self.mainChartRightToolBottomLayout = QtWidgets.QVBoxLayout()
        self.mainChartRightToolBottomLayout.setObjectName("mainChartRightToolBottomLayout")
        spacerItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.mainChartRightToolBottomLayout.addItem(spacerItem7)
        self.y2MinPlus10Button = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2MinPlus10Button.setObjectName("y2MinPlus10Button")
        self.mainChartRightToolBottomLayout.addWidget(self.y2MinPlus10Button)
        self.y2MinPlus5Button = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2MinPlus5Button.setObjectName("y2MinPlus5Button")
        self.mainChartRightToolBottomLayout.addWidget(self.y2MinPlus5Button)
        self.y2MinMinus5Button = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2MinMinus5Button.setObjectName("y2MinMinus5Button")
        self.mainChartRightToolBottomLayout.addWidget(self.y2MinMinus5Button)
        self.y2MinMinus10Button = QtWidgets.QToolButton(self.mainChartRightTools)
        self.y2MinMinus10Button.setObjectName("y2MinMinus10Button")
        self.mainChartRightToolBottomLayout.addWidget(self.y2MinMinus10Button)
        self.mainChartRightToolLayout.addLayout(self.mainChartRightToolBottomLayout)
        self.mainChartLayout.addWidget(self.mainChartRightTools)
        self.mainChartLayout.setStretch(1, 1)
        self.waveformContainer = QtWidgets.QFrame(self.chartSplitter)
        self.waveformContainer.setObjectName("waveformContainer")
        self.waveformLayout = QtWidgets.QHBoxLayout(self.waveformContainer)
        self.waveformLayout.setObjectName("waveformLayout")
        self.waveformControls = QtWidgets.QGridLayout()
        self.waveformControls.setObjectName("waveformControls")
        self.checkboxContainer = QtWidgets.QHBoxLayout()
        self.checkboxContainer.setObjectName("checkboxContainer")
        self.waveformIsFiltered = QtWidgets.QCheckBox(self.waveformContainer)
        self.waveformIsFiltered.setObjectName("waveformIsFiltered")
        self.checkboxContainer.addWidget(self.waveformIsFiltered)
        self.hardClipWaveform = QtWidgets.QCheckBox(self.waveformContainer)
        self.hardClipWaveform.setObjectName("hardClipWaveform")
        self.checkboxContainer.addWidget(self.hardClipWaveform)
        self.saveWaveformChartButton = QtWidgets.QToolButton(self.waveformContainer)
        self.saveWaveformChartButton.setObjectName("saveWaveformChartButton")
        self.checkboxContainer.addWidget(self.saveWaveformChartButton)
        self.waveformControls.addLayout(self.checkboxContainer, 3, 0, 1, 2)
        self.signalSelectorLabel = QtWidgets.QLabel(self.waveformContainer)
        self.signalSelectorLabel.setObjectName("signalSelectorLabel")
        self.waveformControls.addWidget(self.signalSelectorLabel, 1, 0, 1, 1)
        self.headroom = QtWidgets.QDoubleSpinBox(self.waveformContainer)
        self.headroom.setEnabled(False)
        self.headroom.setMinimum(-120.0)
        self.headroom.setMaximum(120.0)
        self.headroom.setSingleStep(0.01)
        self.headroom.setObjectName("headroom")
        self.waveformControls.addWidget(self.headroom, 4, 1, 1, 1)
        self.sourceFileLayout = QtWidgets.QHBoxLayout()
        self.sourceFileLayout.setObjectName("sourceFileLayout")
        self.sourceFile = QtWidgets.QLineEdit(self.waveformContainer)
        self.sourceFile.setReadOnly(True)
        self.sourceFile.setObjectName("sourceFile")
        self.sourceFileLayout.addWidget(self.sourceFile)
        self.loadSignalButton = QtWidgets.QToolButton(self.waveformContainer)
        self.loadSignalButton.setObjectName("loadSignalButton")
        self.sourceFileLayout.addWidget(self.loadSignalButton)
        self.waveformControls.addLayout(self.sourceFileLayout, 2, 1, 1, 1)
        self.sourceFileLabel = QtWidgets.QLabel(self.waveformContainer)
        self.sourceFileLabel.setObjectName("sourceFileLabel")
        self.waveformControls.addWidget(self.sourceFileLabel, 2, 0, 1, 1)
        self.startTime = QtWidgets.QTimeEdit(self.waveformContainer)
        self.startTime.setObjectName("startTime")
        self.waveformControls.addWidget(self.startTime, 6, 1, 1, 1)
        self.analysisLayout = QtWidgets.QHBoxLayout()
        self.analysisLayout.setObjectName("analysisLayout")
        self.rmsLevel = QtWidgets.QDoubleSpinBox(self.waveformContainer)
        self.rmsLevel.setEnabled(False)
        self.rmsLevel.setMinimum(-120.0)
        self.rmsLevel.setMaximum(120.0)
        self.rmsLevel.setSingleStep(0.01)
        self.rmsLevel.setObjectName("rmsLevel")
        self.analysisLayout.addWidget(self.rmsLevel)
        self.crestFactor = QtWidgets.QDoubleSpinBox(self.waveformContainer)
        self.crestFactor.setEnabled(False)
        self.crestFactor.setMinimum(-120.0)
        self.crestFactor.setMaximum(120.0)
        self.crestFactor.setSingleStep(0.01)
        self.crestFactor.setObjectName("crestFactor")
        self.analysisLayout.addWidget(self.crestFactor)
        self.waveformControls.addLayout(self.analysisLayout, 5, 1, 1, 1)
        self.analysisLabel = QtWidgets.QLabel(self.waveformContainer)
        self.analysisLabel.setObjectName("analysisLabel")
        self.waveformControls.addWidget(self.analysisLabel, 5, 0, 1, 1)
        self.bmHeaderLabel = QtWidgets.QLabel(self.waveformContainer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bmHeaderLabel.setFont(font)
        self.bmHeaderLabel.setFrameShape(QtWidgets.QFrame.Box)
        self.bmHeaderLabel.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.bmHeaderLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.bmHeaderLabel.setObjectName("bmHeaderLabel")
        self.waveformControls.addWidget(self.bmHeaderLabel, 9, 0, 1, 2)
        self.signalSelector = QtWidgets.QComboBox(self.waveformContainer)
        self.signalSelector.setObjectName("signalSelector")
        self.waveformControls.addWidget(self.signalSelector, 1, 1, 1, 1)
        self.yRangeLayout = QtWidgets.QHBoxLayout()
        self.yRangeLayout.setObjectName("yRangeLayout")
        self.yMin = QtWidgets.QDoubleSpinBox(self.waveformContainer)
        self.yMin.setMinimum(-1.0)
        self.yMin.setMaximum(1.0)
        self.yMin.setSingleStep(0.01)
        self.yMin.setProperty("value", -1.0)
        self.yMin.setObjectName("yMin")
        self.yRangeLayout.addWidget(self.yMin)
        self.yMax = QtWidgets.QDoubleSpinBox(self.waveformContainer)
        self.yMax.setMinimum(-1.0)
        self.yMax.setMaximum(1.0)
        self.yMax.setSingleStep(0.01)
        self.yMax.setProperty("value", 1.0)
        self.yMax.setObjectName("yMax")
        self.yRangeLayout.addWidget(self.yMax)
        self.waveformControls.addLayout(self.yRangeLayout, 8, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.waveformContainer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setFrameShape(QtWidgets.QFrame.Box)
        self.label_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.waveformControls.addWidget(self.label_2, 0, 0, 1, 2)
        self.endTime = QtWidgets.QTimeEdit(self.waveformContainer)
        self.endTime.setObjectName("endTime")
        self.waveformControls.addWidget(self.endTime, 7, 1, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.compareSpectrumButton = QtWidgets.QToolButton(self.waveformContainer)
        self.compareSpectrumButton.setObjectName("compareSpectrumButton")
        self.horizontalLayout.addWidget(self.compareSpectrumButton)
        self.showSpectrumButton = QtWidgets.QToolButton(self.waveformContainer)
        self.showSpectrumButton.setObjectName("showSpectrumButton")
        self.horizontalLayout.addWidget(self.showSpectrumButton)
        self.hideSpectrumButton = QtWidgets.QToolButton(self.waveformContainer)
        self.hideSpectrumButton.setObjectName("hideSpectrumButton")
        self.horizontalLayout.addWidget(self.hideSpectrumButton)
        self.filteredSpectrumLimitsButton = QtWidgets.QToolButton(self.waveformContainer)
        self.filteredSpectrumLimitsButton.setObjectName("filteredSpectrumLimitsButton")
        self.horizontalLayout.addWidget(self.filteredSpectrumLimitsButton)
        self.zoomInButton = QtWidgets.QToolButton(self.waveformContainer)
        self.zoomInButton.setObjectName("zoomInButton")
        self.horizontalLayout.addWidget(self.zoomInButton)
        self.zoomOutButton = QtWidgets.QToolButton(self.waveformContainer)
        self.zoomOutButton.setObjectName("zoomOutButton")
        self.horizontalLayout.addWidget(self.zoomOutButton)
        self.showStatsButton = QtWidgets.QToolButton(self.waveformContainer)
        self.showStatsButton.setObjectName("showStatsButton")
        self.horizontalLayout.addWidget(self.showStatsButton)
        self.waveformControls.addLayout(self.horizontalLayout, 14, 0, 1, 2)
        self.bmClippingLabel = QtWidgets.QLabel(self.waveformContainer)
        self.bmClippingLabel.setObjectName("bmClippingLabel")
        self.waveformControls.addWidget(self.bmClippingLabel, 11, 0, 1, 1)
        self.yRangeLabel = QtWidgets.QLabel(self.waveformContainer)
        self.yRangeLabel.setObjectName("yRangeLabel")
        self.waveformControls.addWidget(self.yRangeLabel, 8, 0, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.waveformControls.addItem(spacerItem8, 15, 0, 1, 2)
        self.headroomLabel = QtWidgets.QLabel(self.waveformContainer)
        self.headroomLabel.setObjectName("headroomLabel")
        self.waveformControls.addWidget(self.headroomLabel, 4, 0, 1, 1)
        self.bmHeadroom = QtWidgets.QComboBox(self.waveformContainer)
        self.bmHeadroom.setObjectName("bmHeadroom")
        self.bmHeadroom.addItem("")
        self.bmHeadroom.addItem("")
        self.bmHeadroom.addItem("")
        self.bmHeadroom.addItem("")
        self.bmHeadroom.addItem("")
        self.waveformControls.addWidget(self.bmHeadroom, 12, 1, 1, 1)
        self.endTimeLabel = QtWidgets.QLabel(self.waveformContainer)
        self.endTimeLabel.setObjectName("endTimeLabel")
        self.waveformControls.addWidget(self.endTimeLabel, 7, 0, 1, 1)
        self.bmLayout = QtWidgets.QHBoxLayout()
        self.bmLayout.setObjectName("bmLayout")
        self.bmlpfPosition = QtWidgets.QComboBox(self.waveformContainer)
        self.bmlpfPosition.setObjectName("bmlpfPosition")
        self.bmLayout.addWidget(self.bmlpfPosition)
        self.bmhpfOn = QtWidgets.QCheckBox(self.waveformContainer)
        self.bmhpfOn.setObjectName("bmhpfOn")
        self.bmLayout.addWidget(self.bmhpfOn)
        self.waveformControls.addLayout(self.bmLayout, 10, 1, 1, 1)
        self.startTimeLabel = QtWidgets.QLabel(self.waveformContainer)
        self.startTimeLabel.setObjectName("startTimeLabel")
        self.waveformControls.addWidget(self.startTimeLabel, 6, 0, 1, 1)
        self.bmlpfPositionLabel = QtWidgets.QLabel(self.waveformContainer)
        self.bmlpfPositionLabel.setObjectName("bmlpfPositionLabel")
        self.waveformControls.addWidget(self.bmlpfPositionLabel, 10, 0, 1, 1)
        self.bmClippingOptions = QtWidgets.QHBoxLayout()
        self.bmClippingOptions.setObjectName("bmClippingOptions")
        self.bmClipBefore = QtWidgets.QCheckBox(self.waveformContainer)
        self.bmClipBefore.setObjectName("bmClipBefore")
        self.bmClippingOptions.addWidget(self.bmClipBefore)
        self.bmClipAfter = QtWidgets.QCheckBox(self.waveformContainer)
        self.bmClipAfter.setObjectName("bmClipAfter")
        self.bmClippingOptions.addWidget(self.bmClipAfter)
        self.waveformControls.addLayout(self.bmClippingOptions, 11, 1, 1, 1)
        self.bmHeadroomLabel = QtWidgets.QLabel(self.waveformContainer)
        self.bmHeadroomLabel.setObjectName("bmHeadroomLabel")
        self.waveformControls.addWidget(self.bmHeadroomLabel, 12, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.waveformContainer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setFrameShape(QtWidgets.QFrame.Box)
        self.label_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.waveformControls.addWidget(self.label_3, 13, 0, 1, 2)
        self.waveformLayout.addLayout(self.waveformControls)
        self.waveformChart = PlotWidgetWithDateAxis(self.waveformContainer)
        self.waveformChart.setObjectName("waveformChart")
        self.waveformLayout.addWidget(self.waveformChart)
        self.filteredSpectrumChart = MplWidget(self.waveformContainer)
        self.filteredSpectrumChart.setObjectName("filteredSpectrumChart")
        self.waveformLayout.addWidget(self.filteredSpectrumChart)
        self.waveformLayout.setStretch(1, 1)
        self.waveformLayout.setStretch(2, 1)
        self.leftPane.addWidget(self.chartSplitter, 1, 0, 1, 10)
        self.filterReference = QtWidgets.QComboBox(self.centralwidget)
        self.filterReference.setObjectName("filterReference")
        self.filterReference.addItem("")
        self.leftPane.addWidget(self.filterReference, 0, 2, 1, 1)
        self.signalReference = QtWidgets.QComboBox(self.centralwidget)
        self.signalReference.setObjectName("signalReference")
        self.signalReference.addItem("")
        self.leftPane.addWidget(self.signalReference, 0, 1, 1, 1)
        self.smoothAllSignals = QtWidgets.QCheckBox(self.centralwidget)
        self.smoothAllSignals.setObjectName("smoothAllSignals")
        self.leftPane.addWidget(self.smoothAllSignals, 0, 5, 1, 1)
        self.referenceLabel = QtWidgets.QLabel(self.centralwidget)
        self.referenceLabel.setObjectName("referenceLabel")
        self.leftPane.addWidget(self.referenceLabel, 0, 0, 1, 1)
        self.signalVisibilityButton = QtWidgets.QToolButton(self.centralwidget)
        self.signalVisibilityButton.setObjectName("signalVisibilityButton")
        self.leftPane.addWidget(self.signalVisibilityButton, 0, 6, 1, 1)
        self.leftPane.setColumnStretch(1, 1)
        self.leftPane.setColumnStretch(2, 1)
        self.panes.addLayout(self.leftPane)
        self.rightPane = QtWidgets.QVBoxLayout()
        self.rightPane.setObjectName("rightPane")
        self.signalsLabel = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.signalsLabel.setFont(font)
        self.signalsLabel.setFrameShape(QtWidgets.QFrame.Box)
        self.signalsLabel.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.signalsLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.signalsLabel.setObjectName("signalsLabel")
        self.rightPane.addWidget(self.signalsLabel)
        self.signalButtonsLayout = QtWidgets.QHBoxLayout()
        self.signalButtonsLayout.setObjectName("signalButtonsLayout")
        self.addSignalButton = QtWidgets.QToolButton(self.centralwidget)
        self.addSignalButton.setProperty("flat", False)
        self.addSignalButton.setObjectName("addSignalButton")
        self.signalButtonsLayout.addWidget(self.addSignalButton)
        self.linkSignalButton = QtWidgets.QToolButton(self.centralwidget)
        self.linkSignalButton.setEnabled(False)
        self.linkSignalButton.setObjectName("linkSignalButton")
        self.signalButtonsLayout.addWidget(self.linkSignalButton)
        self.deleteSignalButton = QtWidgets.QToolButton(self.centralwidget)
        self.deleteSignalButton.setEnabled(False)
        self.deleteSignalButton.setObjectName("deleteSignalButton")
        self.signalButtonsLayout.addWidget(self.deleteSignalButton)
        self.clearSignalsButton = QtWidgets.QToolButton(self.centralwidget)
        self.clearSignalsButton.setEnabled(False)
        self.clearSignalsButton.setObjectName("clearSignalsButton")
        self.signalButtonsLayout.addWidget(self.clearSignalsButton)
        self.rightPane.addLayout(self.signalButtonsLayout)
        self.signalView = QtWidgets.QTableView(self.centralwidget)
        self.signalView.setObjectName("signalView")
        self.rightPane.addWidget(self.signalView)
        self.filtersLabel = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.filtersLabel.setFont(font)
        self.filtersLabel.setFrameShape(QtWidgets.QFrame.Box)
        self.filtersLabel.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.filtersLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.filtersLabel.setObjectName("filtersLabel")
        self.rightPane.addWidget(self.filtersLabel)
        self.filterToolbarLayout = QtWidgets.QHBoxLayout()
        self.filterToolbarLayout.setObjectName("filterToolbarLayout")
        self.preset1Button = QtWidgets.QToolButton(self.centralwidget)
        self.preset1Button.setEnabled(False)
        self.preset1Button.setToolTip("")
        self.preset1Button.setObjectName("preset1Button")
        self.filterToolbarLayout.addWidget(self.preset1Button)
        self.preset2Button = QtWidgets.QToolButton(self.centralwidget)
        self.preset2Button.setEnabled(False)
        self.preset2Button.setToolTip("")
        self.preset2Button.setObjectName("preset2Button")
        self.filterToolbarLayout.addWidget(self.preset2Button)
        self.preset3Button = QtWidgets.QToolButton(self.centralwidget)
        self.preset3Button.setEnabled(False)
        self.preset3Button.setToolTip("")
        self.preset3Button.setStatusTip("")
        self.preset3Button.setObjectName("preset3Button")
        self.filterToolbarLayout.addWidget(self.preset3Button)
        self.addFilterButton = QtWidgets.QToolButton(self.centralwidget)
        self.addFilterButton.setEnabled(True)
        self.addFilterButton.setObjectName("addFilterButton")
        self.filterToolbarLayout.addWidget(self.addFilterButton)
        self.editFilterButton = QtWidgets.QToolButton(self.centralwidget)
        self.editFilterButton.setEnabled(False)
        self.editFilterButton.setProperty("flat", False)
        self.editFilterButton.setObjectName("editFilterButton")
        self.filterToolbarLayout.addWidget(self.editFilterButton)
        self.deleteFilterButton = QtWidgets.QToolButton(self.centralwidget)
        self.deleteFilterButton.setEnabled(False)
        self.deleteFilterButton.setObjectName("deleteFilterButton")
        self.filterToolbarLayout.addWidget(self.deleteFilterButton)
        self.clearFiltersButton = QtWidgets.QToolButton(self.centralwidget)
        self.clearFiltersButton.setEnabled(False)
        self.clearFiltersButton.setObjectName("clearFiltersButton")
        self.filterToolbarLayout.addWidget(self.clearFiltersButton)
        self.rightPane.addLayout(self.filterToolbarLayout)
        self.filterView = QtWidgets.QTableView(self.centralwidget)
        self.filterView.setObjectName("filterView")
        self.rightPane.addWidget(self.filterView)
        self.selectorsLayout = QtWidgets.QGridLayout()
        self.selectorsLayout.setObjectName("selectorsLayout")
        self.showSignalsLabel = QtWidgets.QLabel(self.centralwidget)
        self.showSignalsLabel.setObjectName("showSignalsLabel")
        self.selectorsLayout.addWidget(self.showSignalsLabel, 0, 0, 1, 1)
        self.showFiltersLabel = QtWidgets.QLabel(self.centralwidget)
        self.showFiltersLabel.setObjectName("showFiltersLabel")
        self.selectorsLayout.addWidget(self.showFiltersLabel, 0, 1, 1, 1)
        self.showFiltersLabel1 = QtWidgets.QLabel(self.centralwidget)
        self.showFiltersLabel1.setObjectName("showFiltersLabel1")
        self.selectorsLayout.addWidget(self.showFiltersLabel1, 0, 2, 1, 1)
        self.showSignals = QtWidgets.QComboBox(self.centralwidget)
        self.showSignals.setObjectName("showSignals")
        self.selectorsLayout.addWidget(self.showSignals, 1, 0, 1, 1)
        self.showFilteredSignals = QtWidgets.QComboBox(self.centralwidget)
        self.showFilteredSignals.setObjectName("showFilteredSignals")
        self.selectorsLayout.addWidget(self.showFilteredSignals, 1, 1, 1, 1)
        self.showFilters = QtWidgets.QComboBox(self.centralwidget)
        self.showFilters.setObjectName("showFilters")
        self.selectorsLayout.addWidget(self.showFilters, 1, 2, 1, 1)
        self.equalEnergyTilt = QtWidgets.QCheckBox(self.centralwidget)
        self.equalEnergyTilt.setObjectName("equalEnergyTilt")
        self.selectorsLayout.addWidget(self.equalEnergyTilt, 2, 2, 1, 1)
        self.showLegend = QtWidgets.QCheckBox(self.centralwidget)
        self.showLegend.setChecked(True)
        self.showLegend.setObjectName("showLegend")
        self.selectorsLayout.addWidget(self.showLegend, 2, 0, 1, 1)
        self.rightPane.addLayout(self.selectorsLayout)
        self.panes.addLayout(self.rightPane)
        self.panes.setStretch(0, 3)
        self.panes.setStretch(1, 1)
        self.widgetGridLayout.addLayout(self.panes, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1569, 30))
        self.menubar.setObjectName("menubar")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuPresets = QtWidgets.QMenu(self.menuFile)
        self.menuPresets.setObjectName("menuPresets")
        self.menuLoad = QtWidgets.QMenu(self.menuPresets)
        self.menuLoad.setObjectName("menuLoad")
        self.menu_Clear = QtWidgets.QMenu(self.menuPresets)
        self.menu_Clear.setObjectName("menu_Clear")
        self.menu_Store = QtWidgets.QMenu(self.menuPresets)
        self.menu_Store.setObjectName("menu_Store")
        self.menu_Tools = QtWidgets.QMenu(self.menubar)
        self.menu_Tools.setObjectName("menu_Tools")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionShow_Logs = QtWidgets.QAction(MainWindow)
        self.actionShow_Logs.setObjectName("actionShow_Logs")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionExtract_Audio = QtWidgets.QAction(MainWindow)
        self.actionExtract_Audio.setObjectName("actionExtract_Audio")
        self.actionPresets = QtWidgets.QAction(MainWindow)
        self.actionPresets.setObjectName("actionPresets")
        self.actionClear_Preset_3 = QtWidgets.QAction(MainWindow)
        self.actionClear_Preset_3.setObjectName("actionClear_Preset_3")
        self.actionSave_Chart = QtWidgets.QAction(MainWindow)
        self.actionSave_Chart.setObjectName("actionSave_Chart")
        self.actionExport_Biquad = QtWidgets.QAction(MainWindow)
        self.actionExport_Biquad.setObjectName("actionExport_Biquad")
        self.actionSave_Filter = QtWidgets.QAction(MainWindow)
        self.actionSave_Filter.setEnabled(False)
        self.actionSave_Filter.setObjectName("actionSave_Filter")
        self.actionLoad_Filter = QtWidgets.QAction(MainWindow)
        self.actionLoad_Filter.setCheckable(False)
        self.actionLoad_Filter.setEnabled(True)
        self.actionLoad_Filter.setObjectName("actionLoad_Filter")
        self.action_load_preset_1 = QtWidgets.QAction(MainWindow)
        self.action_load_preset_1.setObjectName("action_load_preset_1")
        self.action_load_preset_2 = QtWidgets.QAction(MainWindow)
        self.action_load_preset_2.setObjectName("action_load_preset_2")
        self.action_load_preset_3 = QtWidgets.QAction(MainWindow)
        self.action_load_preset_3.setObjectName("action_load_preset_3")
        self.action_clear_preset_1 = QtWidgets.QAction(MainWindow)
        self.action_clear_preset_1.setObjectName("action_clear_preset_1")
        self.action_clear_preset_2 = QtWidgets.QAction(MainWindow)
        self.action_clear_preset_2.setObjectName("action_clear_preset_2")
        self.action_clear_preset_3 = QtWidgets.QAction(MainWindow)
        self.action_clear_preset_3.setObjectName("action_clear_preset_3")
        self.action_store_preset_1 = QtWidgets.QAction(MainWindow)
        self.action_store_preset_1.setObjectName("action_store_preset_1")
        self.action_store_preset_2 = QtWidgets.QAction(MainWindow)
        self.action_store_preset_2.setObjectName("action_store_preset_2")
        self.action_store_preset_3 = QtWidgets.QAction(MainWindow)
        self.action_store_preset_3.setObjectName("action_store_preset_3")
        self.actionExport_FRD = QtWidgets.QAction(MainWindow)
        self.actionExport_FRD.setObjectName("actionExport_FRD")
        self.action_Save_Project = QtWidgets.QAction(MainWindow)
        self.action_Save_Project.setObjectName("action_Save_Project")
        self.action_Load_Project = QtWidgets.QAction(MainWindow)
        self.action_Load_Project.setObjectName("action_Load_Project")
        self.actionSave_Signal = QtWidgets.QAction(MainWindow)
        self.actionSave_Signal.setObjectName("actionSave_Signal")
        self.actionLoad_Signal = QtWidgets.QAction(MainWindow)
        self.actionLoad_Signal.setObjectName("actionLoad_Signal")
        self.actionClear_Project = QtWidgets.QAction(MainWindow)
        self.actionClear_Project.setObjectName("actionClear_Project")
        self.actionAnalyse_Audio = QtWidgets.QAction(MainWindow)
        self.actionAnalyse_Audio.setObjectName("actionAnalyse_Audio")
        self.action_Batch_Extract = QtWidgets.QAction(MainWindow)
        self.action_Batch_Extract.setObjectName("action_Batch_Extract")
        self.actionSave_Report = QtWidgets.QAction(MainWindow)
        self.actionSave_Report.setObjectName("actionSave_Report")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.action_Remux_Audio = QtWidgets.QAction(MainWindow)
        self.action_Remux_Audio.setObjectName("action_Remux_Audio")
        self.actionAdd_BEQ_Filter = QtWidgets.QAction(MainWindow)
        self.actionAdd_BEQ_Filter.setObjectName("actionAdd_BEQ_Filter")
        self.actionClear_Signals = QtWidgets.QAction(MainWindow)
        self.actionClear_Signals.setObjectName("actionClear_Signals")
        self.action1_1_Smoothing = QtWidgets.QAction(MainWindow)
        self.action1_1_Smoothing.setObjectName("action1_1_Smoothing")
        self.action1_3_Smoothing = QtWidgets.QAction(MainWindow)
        self.action1_3_Smoothing.setObjectName("action1_3_Smoothing")
        self.action1_6_Smoothing = QtWidgets.QAction(MainWindow)
        self.action1_6_Smoothing.setObjectName("action1_6_Smoothing")
        self.action1_1_2_Smoothing = QtWidgets.QAction(MainWindow)
        self.action1_1_2_Smoothing.setObjectName("action1_1_2_Smoothing")
        self.action1_2_4_Smoothing = QtWidgets.QAction(MainWindow)
        self.action1_2_4_Smoothing.setObjectName("action1_2_4_Smoothing")
        self.action1_4_8_Smoothing = QtWidgets.QAction(MainWindow)
        self.action1_4_8_Smoothing.setObjectName("action1_4_8_Smoothing")
        self.action_Remove_Smoothing = QtWidgets.QAction(MainWindow)
        self.action_Remove_Smoothing.setObjectName("action_Remove_Smoothing")
        self.actionClear_Filters = QtWidgets.QAction(MainWindow)
        self.actionClear_Filters.setObjectName("actionClear_Filters")
        self.actionMerge_Minidsp_XML = QtWidgets.QAction(MainWindow)
        self.actionMerge_Minidsp_XML.setObjectName("actionMerge_Minidsp_XML")
        self.actionUser_Guide = QtWidgets.QAction(MainWindow)
        self.actionUser_Guide.setObjectName("actionUser_Guide")
        self.actionRelease_Notes = QtWidgets.QAction(MainWindow)
        self.actionRelease_Notes.setObjectName("actionRelease_Notes")
        self.actionExport_BEQ_Filter = QtWidgets.QAction(MainWindow)
        self.actionExport_BEQ_Filter.setObjectName("actionExport_BEQ_Filter")
        self.actionCreate_AVS_Post = QtWidgets.QAction(MainWindow)
        self.actionCreate_AVS_Post.setObjectName("actionCreate_AVS_Post")
        self.actionSync_with_HTP_1 = QtWidgets.QAction(MainWindow)
        self.actionSync_with_HTP_1.setObjectName("actionSync_with_HTP_1")
        self.actionBrowse_Catalogue = QtWidgets.QAction(MainWindow)
        self.actionBrowse_Catalogue.setObjectName("actionBrowse_Catalogue")
        self.actionManage_JRiver_MC = QtWidgets.QAction(MainWindow)
        self.actionManage_JRiver_MC.setObjectName("actionManage_JRiver_MC")
        self.actionShow_Filter_Widget = QtWidgets.QAction(MainWindow)
        self.actionShow_Filter_Widget.setObjectName("actionShow_Filter_Widget")
        self.actionMerge_Signals = QtWidgets.QAction(MainWindow)
        self.actionMerge_Signals.setObjectName("actionMerge_Signals")
        self.menuHelp.addAction(self.actionUser_Guide)
        self.menuHelp.addAction(self.actionShow_Logs)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionRelease_Notes)
        self.menuHelp.addAction(self.actionAbout)
        self.menuSettings.addAction(self.actionPreferences)
        self.menuSettings.addSeparator()
        self.menuLoad.addAction(self.action_load_preset_1)
        self.menuLoad.addAction(self.action_load_preset_2)
        self.menuLoad.addAction(self.action_load_preset_3)
        self.menu_Clear.addAction(self.action_clear_preset_1)
        self.menu_Clear.addAction(self.action_clear_preset_2)
        self.menu_Clear.addAction(self.action_clear_preset_3)
        self.menu_Store.addAction(self.action_store_preset_1)
        self.menu_Store.addAction(self.action_store_preset_2)
        self.menu_Store.addAction(self.action_store_preset_3)
        self.menuPresets.addAction(self.menuLoad.menuAction())
        self.menuPresets.addAction(self.menu_Store.menuAction())
        self.menuPresets.addAction(self.menu_Clear.menuAction())
        self.menuFile.addAction(self.action_Load_Project)
        self.menuFile.addAction(self.action_Save_Project)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionLoad_Signal)
        self.menuFile.addAction(self.actionSave_Signal)
        self.menuFile.addAction(self.actionClear_Signals)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionLoad_Filter)
        self.menuFile.addAction(self.actionSave_Filter)
        self.menuFile.addAction(self.actionClear_Filters)
        self.menuFile.addAction(self.menuPresets.menuAction())
        self.menuFile.addAction(self.actionShow_Filter_Widget)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionAdd_BEQ_Filter)
        self.menuFile.addAction(self.actionExport_BEQ_Filter)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExport_FRD)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_Chart)
        self.menuFile.addAction(self.actionSave_Report)
        self.menu_Tools.addAction(self.actionExtract_Audio)
        self.menu_Tools.addAction(self.action_Batch_Extract)
        self.menu_Tools.addAction(self.action_Remux_Audio)
        self.menu_Tools.addAction(self.actionMerge_Signals)
        self.menu_Tools.addSeparator()
        self.menu_Tools.addAction(self.actionAnalyse_Audio)
        self.menu_Tools.addSeparator()
        self.menu_Tools.addAction(self.actionBrowse_Catalogue)
        self.menu_Tools.addAction(self.actionExport_Biquad)
        self.menu_Tools.addAction(self.actionMerge_Minidsp_XML)
        self.menu_Tools.addSeparator()
        self.menu_Tools.addAction(self.actionCreate_AVS_Post)
        self.menu_Tools.addSeparator()
        self.menu_Tools.addAction(self.actionSync_with_HTP_1)
        self.menu_Tools.addSeparator()
        self.menu_Tools.addAction(self.actionManage_JRiver_MC)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menu_Tools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.addFilterButton.clicked.connect(MainWindow.addFilter) # type: ignore
        self.deleteFilterButton.clicked.connect(MainWindow.deleteFilter) # type: ignore
        self.editFilterButton.clicked.connect(MainWindow.editFilter) # type: ignore
        self.addSignalButton.clicked.connect(MainWindow.addSignal) # type: ignore
        self.deleteSignalButton.clicked.connect(MainWindow.deleteSignal) # type: ignore
        self.signalReference.currentIndexChanged['int'].connect(MainWindow.normaliseSignalMagnitude) # type: ignore
        self.limitsButton.clicked.connect(MainWindow.showLimits) # type: ignore
        self.filterReference.currentIndexChanged['int'].connect(MainWindow.normaliseFilterMagnitude) # type: ignore
        self.showValuesButton.clicked.connect(MainWindow.showValues) # type: ignore
        self.showLegend.clicked.connect(MainWindow.changeLegendVisibility) # type: ignore
        self.showFilters.currentTextChanged['QString'].connect(MainWindow.changeFilterVisibility) # type: ignore
        self.preset1Button.clicked.connect(MainWindow.applyPreset1) # type: ignore
        self.preset2Button.clicked.connect(MainWindow.applyPreset2) # type: ignore
        self.preset3Button.clicked.connect(MainWindow.applyPreset3) # type: ignore
        self.showSignals.currentTextChanged['QString'].connect(MainWindow.changeSignalVisibility) # type: ignore
        self.showFilteredSignals.currentTextChanged['QString'].connect(MainWindow.changeSignalFilterVisibility) # type: ignore
        self.linkSignalButton.clicked.connect(MainWindow.linkSignals) # type: ignore
        self.equalEnergyTilt.clicked.connect(MainWindow.toggleTilt) # type: ignore
        self.octaveSmoothing.currentTextChanged['QString'].connect(MainWindow.smoothSignals) # type: ignore
        self.smoothAllSignals.clicked.connect(MainWindow.smoothSignals) # type: ignore
        self.clearSignalsButton.clicked.connect(MainWindow.clearSignals) # type: ignore
        self.clearFiltersButton.clicked.connect(MainWindow.clearFilters) # type: ignore
        self.y2MaxPlus10Button.clicked.connect(MainWindow.y2_max_plus_10) # type: ignore
        self.y2MaxMinus10Button.clicked.connect(MainWindow.y2_max_minus_10) # type: ignore
        self.y1MaxPlus10Button.clicked.connect(MainWindow.y1_max_plus_10) # type: ignore
        self.y1MaxPlus5Button.clicked.connect(MainWindow.y1_max_plus_5) # type: ignore
        self.y1AutoOnButton.clicked.connect(MainWindow.y1_auto_on) # type: ignore
        self.y1AutoOffButton.clicked.connect(MainWindow.y1_auto_off) # type: ignore
        self.y1MaxMinus5Button.clicked.connect(MainWindow.y1_max_minus_5) # type: ignore
        self.y1MaxMinus10Button.clicked.connect(MainWindow.y1_max_minus_10) # type: ignore
        self.y2MaxPlus5Button.clicked.connect(MainWindow.y2_max_plus_5) # type: ignore
        self.y2AutoOnButton.clicked.connect(MainWindow.y2_auto_on) # type: ignore
        self.y2AutoOffButton.clicked.connect(MainWindow.y2_auto_off) # type: ignore
        self.y2MaxMinus5Button.clicked.connect(MainWindow.y2_max_minus_5) # type: ignore
        self.y1MinPlus10Button.clicked.connect(MainWindow.y1_min_plus_10) # type: ignore
        self.y1MinPlus5Button.clicked.connect(MainWindow.y1_min_plus_5) # type: ignore
        self.y1MinMinus5Button.clicked.connect(MainWindow.y1_min_minus_5) # type: ignore
        self.y1MinMinus10Button.clicked.connect(MainWindow.y1_min_minus_10) # type: ignore
        self.y2MinPlus10Button.clicked.connect(MainWindow.y2_min_plus_10) # type: ignore
        self.y2MinPlus5Button.clicked.connect(MainWindow.y2_min_plus_5) # type: ignore
        self.y2MinMinus5Button.clicked.connect(MainWindow.y2_min_minus_5) # type: ignore
        self.y2MinMinus10Button.clicked.connect(MainWindow.y2_min_minus_10) # type: ignore
        self.signalVisibilityButton.clicked.connect(MainWindow.changeIndividualSignalVisibility) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "BEQ Designer"))
        self.octaveSmoothing.setItemText(0, _translate("MainWindow", "None"))
        self.octaveSmoothing.setItemText(1, _translate("MainWindow", "1/1"))
        self.octaveSmoothing.setItemText(2, _translate("MainWindow", "1/2"))
        self.octaveSmoothing.setItemText(3, _translate("MainWindow", "1/3"))
        self.octaveSmoothing.setItemText(4, _translate("MainWindow", "1/6"))
        self.octaveSmoothing.setItemText(5, _translate("MainWindow", "1/12"))
        self.octaveSmoothing.setItemText(6, _translate("MainWindow", "1/24"))
        self.octaveSmoothing.setItemText(7, _translate("MainWindow", "Savitzky–Golay"))
        self.label.setText(_translate("MainWindow", "Smoothing:"))
        self.limitsButton.setText(_translate("MainWindow", "..."))
        self.showValuesButton.setText(_translate("MainWindow", "..."))
        self.waveformIsFiltered.setText(_translate("MainWindow", "Filtered?"))
        self.hardClipWaveform.setText(_translate("MainWindow", "Clip?"))
        self.saveWaveformChartButton.setText(_translate("MainWindow", "..."))
        self.signalSelectorLabel.setText(_translate("MainWindow", "Signal"))
        self.loadSignalButton.setText(_translate("MainWindow", "..."))
        self.sourceFileLabel.setText(_translate("MainWindow", "Source File"))
        self.startTime.setDisplayFormat(_translate("MainWindow", "HH:mm:ss.zzz"))
        self.analysisLabel.setText(_translate("MainWindow", "RMS / Crest Factor"))
        self.bmHeaderLabel.setText(_translate("MainWindow", "Bass Management"))
        self.label_2.setText(_translate("MainWindow", "Waveform"))
        self.endTime.setDisplayFormat(_translate("MainWindow", "HH:mm:ss.zzz"))
        self.compareSpectrumButton.setText(_translate("MainWindow", "..."))
        self.showSpectrumButton.setText(_translate("MainWindow", "..."))
        self.hideSpectrumButton.setText(_translate("MainWindow", "..."))
        self.filteredSpectrumLimitsButton.setText(_translate("MainWindow", "..."))
        self.zoomInButton.setText(_translate("MainWindow", "..."))
        self.zoomOutButton.setText(_translate("MainWindow", "..."))
        self.showStatsButton.setText(_translate("MainWindow", "..."))
        self.bmClippingLabel.setText(_translate("MainWindow", "Clip"))
        self.yRangeLabel.setText(_translate("MainWindow", "Y Range"))
        self.headroomLabel.setText(_translate("MainWindow", "Headroom"))
        self.bmHeadroom.setItemText(0, _translate("MainWindow", "WCS"))
        self.bmHeadroom.setItemText(1, _translate("MainWindow", "-8"))
        self.bmHeadroom.setItemText(2, _translate("MainWindow", "-7"))
        self.bmHeadroom.setItemText(3, _translate("MainWindow", "-6"))
        self.bmHeadroom.setItemText(4, _translate("MainWindow", "-5"))
        self.endTimeLabel.setText(_translate("MainWindow", "End"))
        self.bmhpfOn.setText(_translate("MainWindow", "HPF On?"))
        self.startTimeLabel.setText(_translate("MainWindow", "Start"))
        self.bmlpfPositionLabel.setText(_translate("MainWindow", "XO Filter"))
        self.bmClipBefore.setText(_translate("MainWindow", "Before"))
        self.bmClipAfter.setText(_translate("MainWindow", "After"))
        self.bmHeadroomLabel.setText(_translate("MainWindow", "Headroom"))
        self.label_3.setText(_translate("MainWindow", "Chart Controls"))
        self.filterReference.setItemText(0, _translate("MainWindow", "None"))
        self.signalReference.setItemText(0, _translate("MainWindow", "None"))
        self.smoothAllSignals.setText(_translate("MainWindow", "All Signals?"))
        self.referenceLabel.setText(_translate("MainWindow", "Reference:"))
        self.signalVisibilityButton.setText(_translate("MainWindow", "..."))
        self.signalsLabel.setText(_translate("MainWindow", "Signals"))
        self.addSignalButton.setText(_translate("MainWindow", "Add"))
        self.addSignalButton.setShortcut(_translate("MainWindow", "Ctrl+Shift+="))
        self.linkSignalButton.setText(_translate("MainWindow", "Link"))
        self.linkSignalButton.setShortcut(_translate("MainWindow", "Ctrl+Shift+L"))
        self.deleteSignalButton.setText(_translate("MainWindow", "Delete"))
        self.clearSignalsButton.setText(_translate("MainWindow", "Clear"))
        self.filtersLabel.setText(_translate("MainWindow", "Filters"))
        self.preset1Button.setText(_translate("MainWindow", "P1"))
        self.preset1Button.setShortcut(_translate("MainWindow", "Ctrl+Shift+1"))
        self.preset2Button.setText(_translate("MainWindow", "P2"))
        self.preset2Button.setShortcut(_translate("MainWindow", "Ctrl+Shift+2"))
        self.preset3Button.setText(_translate("MainWindow", "P3"))
        self.preset3Button.setShortcut(_translate("MainWindow", "Ctrl+Shift+3"))
        self.addFilterButton.setText(_translate("MainWindow", "Add"))
        self.addFilterButton.setShortcut(_translate("MainWindow", "Ctrl+="))
        self.editFilterButton.setText(_translate("MainWindow", "Edit"))
        self.deleteFilterButton.setText(_translate("MainWindow", "Delete"))
        self.deleteFilterButton.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.clearFiltersButton.setText(_translate("MainWindow", "Clear"))
        self.clearFiltersButton.setShortcut(_translate("MainWindow", "Ctrl+Shift+-"))
        self.showSignalsLabel.setText(_translate("MainWindow", "Peak/Avg"))
        self.showFiltersLabel.setText(_translate("MainWindow", "With Filters?"))
        self.showFiltersLabel1.setText(_translate("MainWindow", "Filter Response?"))
        self.equalEnergyTilt.setText(_translate("MainWindow", "+3dB/octave?"))
        self.showLegend.setText(_translate("MainWindow", "Show Legend"))
        self.menuHelp.setTitle(_translate("MainWindow", "&Help"))
        self.menuSettings.setTitle(_translate("MainWindow", "&Settings"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuPresets.setTitle(_translate("MainWindow", "&Presets"))
        self.menuLoad.setTitle(_translate("MainWindow", "&Load"))
        self.menu_Clear.setTitle(_translate("MainWindow", "&Clear"))
        self.menu_Store.setTitle(_translate("MainWindow", "&Store"))
        self.menu_Tools.setTitle(_translate("MainWindow", "&Tools"))
        self.actionShow_Logs.setText(_translate("MainWindow", "Show &Logs"))
        self.actionShow_Logs.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionPreferences.setText(_translate("MainWindow", "&Preferences"))
        self.actionPreferences.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionExtract_Audio.setText(_translate("MainWindow", "&Extract Audio"))
        self.actionExtract_Audio.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionPresets.setText(_translate("MainWindow", "Presets"))
        self.actionClear_Preset_3.setText(_translate("MainWindow", "Clear Preset 3"))
        self.actionSave_Chart.setText(_translate("MainWindow", "Save &Chart"))
        self.actionSave_Chart.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
        self.actionExport_Biquad.setText(_translate("MainWindow", "Export Bi&quad"))
        self.actionExport_Biquad.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionSave_Filter.setText(_translate("MainWindow", "Save &Filter"))
        self.actionSave_Filter.setShortcut(_translate("MainWindow", "Ctrl+Alt+S"))
        self.actionLoad_Filter.setText(_translate("MainWindow", "Load Filte&r"))
        self.actionLoad_Filter.setShortcut(_translate("MainWindow", "Ctrl+Alt+L"))
        self.action_load_preset_1.setText(_translate("MainWindow", "&1"))
        self.action_load_preset_2.setText(_translate("MainWindow", "&2"))
        self.action_load_preset_3.setText(_translate("MainWindow", "&3"))
        self.action_clear_preset_1.setText(_translate("MainWindow", "&1"))
        self.action_clear_preset_2.setText(_translate("MainWindow", "&2"))
        self.action_clear_preset_3.setText(_translate("MainWindow", "&3"))
        self.action_store_preset_1.setText(_translate("MainWindow", "&1"))
        self.action_store_preset_1.setShortcut(_translate("MainWindow", "Ctrl+Alt+1"))
        self.action_store_preset_2.setText(_translate("MainWindow", "&2"))
        self.action_store_preset_2.setShortcut(_translate("MainWindow", "Ctrl+Alt+2"))
        self.action_store_preset_3.setText(_translate("MainWindow", "&3"))
        self.action_store_preset_3.setShortcut(_translate("MainWindow", "Ctrl+Alt+3"))
        self.actionExport_FRD.setText(_translate("MainWindow", "&Export FRD"))
        self.action_Save_Project.setText(_translate("MainWindow", "&Save Project"))
        self.action_Save_Project.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_Load_Project.setText(_translate("MainWindow", "&Load Project"))
        self.action_Load_Project.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave_Signal.setText(_translate("MainWindow", "Save Si&gnal"))
        self.actionSave_Signal.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionLoad_Signal.setText(_translate("MainWindow", "Loa&d Signal"))
        self.actionLoad_Signal.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.actionClear_Project.setText(_translate("MainWindow", "Clear Project"))
        self.actionAnalyse_Audio.setText(_translate("MainWindow", "&Analyse Audio"))
        self.actionAnalyse_Audio.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.action_Batch_Extract.setText(_translate("MainWindow", "&Batch Extract"))
        self.action_Batch_Extract.setShortcut(_translate("MainWindow", "Ctrl+Shift+E"))
        self.actionSave_Report.setText(_translate("MainWindow", "Save Repor&t"))
        self.actionSave_Report.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionAbout.setText(_translate("MainWindow", "&About"))
        self.action_Remux_Audio.setText(_translate("MainWindow", "&Remux Audio"))
        self.action_Remux_Audio.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.actionAdd_BEQ_Filter.setText(_translate("MainWindow", "Load BE&Q Filter"))
        self.actionAdd_BEQ_Filter.setShortcut(_translate("MainWindow", "Ctrl+Shift+B"))
        self.actionClear_Signals.setText(_translate("MainWindow", "Clear S&ignals"))
        self.action1_1_Smoothing.setText(_translate("MainWindow", "1/&1 Smoothing"))
        self.action1_1_Smoothing.setShortcut(_translate("MainWindow", "Alt+Shift+1"))
        self.action1_3_Smoothing.setText(_translate("MainWindow", "1/&3 Smoothing"))
        self.action1_3_Smoothing.setShortcut(_translate("MainWindow", "Alt+Shift+2"))
        self.action1_6_Smoothing.setText(_translate("MainWindow", "1/&6 Smoothing"))
        self.action1_6_Smoothing.setShortcut(_translate("MainWindow", "Alt+Shift+3"))
        self.action1_1_2_Smoothing.setText(_translate("MainWindow", "1/1&2 Smoothing"))
        self.action1_1_2_Smoothing.setShortcut(_translate("MainWindow", "Alt+Shift+4"))
        self.action1_2_4_Smoothing.setText(_translate("MainWindow", "1/2&4 Smoothing"))
        self.action1_2_4_Smoothing.setShortcut(_translate("MainWindow", "Alt+Shift+5"))
        self.action1_4_8_Smoothing.setText(_translate("MainWindow", "1/4&8 Smoothing"))
        self.action1_4_8_Smoothing.setShortcut(_translate("MainWindow", "Alt+Shift+6"))
        self.action_Remove_Smoothing.setText(_translate("MainWindow", "&Remove Smoothing"))
        self.action_Remove_Smoothing.setShortcut(_translate("MainWindow", "Alt+Shift+0"))
        self.actionClear_Filters.setText(_translate("MainWindow", "Clear Filters"))
        self.actionMerge_Minidsp_XML.setText(_translate("MainWindow", "Merge BEQ"))
        self.actionMerge_Minidsp_XML.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionUser_Guide.setText(_translate("MainWindow", "User Guide"))
        self.actionUser_Guide.setShortcut(_translate("MainWindow", "F1"))
        self.actionRelease_Notes.setText(_translate("MainWindow", "Release Notes"))
        self.actionExport_BEQ_Filter.setText(_translate("MainWindow", "Export BEQ Filter"))
        self.actionExport_BEQ_Filter.setShortcut(_translate("MainWindow", "Ctrl+Alt+E"))
        self.actionCreate_AVS_Post.setText(_translate("MainWindow", "Create AVS Post and XML"))
        self.actionCreate_AVS_Post.setToolTip(_translate("MainWindow", "Create AVS Post and XML"))
        self.actionCreate_AVS_Post.setShortcut(_translate("MainWindow", "Ctrl+Shift+P"))
        self.actionSync_with_HTP_1.setText(_translate("MainWindow", "Manage &HTP-1 Filters"))
        self.actionSync_with_HTP_1.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.actionBrowse_Catalogue.setText(_translate("MainWindow", "Browse &Catalogue"))
        self.actionBrowse_Catalogue.setShortcut(_translate("MainWindow", "Ctrl+Alt+C"))
        self.actionManage_JRiver_MC.setText(_translate("MainWindow", "Manage JRiver MC Filters"))
        self.actionManage_JRiver_MC.setShortcut(_translate("MainWindow", "Ctrl+J"))
        self.actionShow_Filter_Widget.setText(_translate("MainWindow", "Show Filter Widget"))
        self.actionShow_Filter_Widget.setShortcut(_translate("MainWindow", "Ctrl+Alt+="))
        self.actionMerge_Signals.setText(_translate("MainWindow", "Merge &Signals"))
        self.actionMerge_Signals.setShortcut(_translate("MainWindow", "Meta+Ctrl+S"))
from app import PlotWidgetWithDateAxis
from mpl import MplWidget
